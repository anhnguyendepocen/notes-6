\section{Reading data from files}

\frame{\sectionpage}

\begin{frame}[fragile]{Introduction}
  
  \begin{itemize}
  \item First thing we need to do is to read in data, so that we can
    use our software to analyze.
  \item Consider these:
    \begin{itemize}
    \item Spreadsheet data saved as \texttt{.csv} file.
    \item ``Delimited'' data such as values separated by spaces.
    \item Actual Excel spreadsheets.
    \end{itemize}
  \end{itemize}
  
\end{frame}

\begin{frame}[fragile]{A spreadsheet}
  
  \includegraphics[width=0.9\textwidth]{spreadsheet}
  
\end{frame}

\begin{frame}[fragile]{Save as \texttt{.csv}}
  
  \begin{itemize}
  \item \texttt{.csv} or ``comma-separated values'' is a way of
    turning spreadsheet values into plain text.
  \item Easy to read into R (or SAS, later)
  \item but does \emph{not} preserve formulas. (This is a reason for
    doing \emph{all} your calculations in your statistical software,
    and \emph{only} having data in your spreadsheet.)
  \item File, Save As Text CSV (or similar). I used name \texttt{test1.csv}.
  \end{itemize}
  
\end{frame}

\begin{frame}[fragile]{The \texttt{.csv} file}
  
\verbatiminput{test1.csv}

To read this in:

\begin{itemize}
\item Fire up \texttt{rstudio.cloud}.
\item Upload this \texttt{.csv} file. (Bottom right, next to New
  Folder, Upload.) Click Choose File, find the file, click Open. Click
  OK. See the file appear bottom right.
\end{itemize}
  
\end{frame}

\begin{frame}[fragile]{Make a new notebook}
  
  \begin{itemize}
  \item \ldots and get rid of the template document (leaving the
    first four lines).
  \item Make a code chunk and in it put this. Run it.
    
<<>>=
library(tidyverse)
@     
  \end{itemize}
  
\end{frame}

\begin{frame}[fragile]{Reading in the file}
  
  \begin{itemize}
  \item Use \texttt{read\_csv} with the name of the file, in
    quotes. Save the read-in file in something, here called
    \texttt{mydata}. Make a new code chunk for this:
    
<<size="small">>=
mydata=read_csv("test1.csv")
@     
\item \texttt{read\_csv} guesses what kind of thing is in each
  column. Here it correctly guesses that:
  
  \begin{itemize}
  \item   \texttt{id} and
  \texttt{group} are text (categorical variables). \texttt{id} is
  actually ``identifier variable'': identifies
  individuals. 
\item \texttt{x} and \texttt{y} are integers (quantitative variables
  that here have no decimal point). Decimal numbers would be labelled
  \texttt{num} or \texttt{double}. 

  \end{itemize}
  

  \end{itemize}  
  
\end{frame}

\begin{frame}[fragile]{R Studio on your own computer}
  
  \begin{itemize}
  \item Put the \texttt{.csv} file in the same folder as your
    project. Then read it in as above like
    \texttt{read\_csv("test1.csv")}. 
  \item Or, use 
<<eval=F>>=
f=file.choose()
@ 
which brings up a file selector (as if you were going to find a file
to load or save it). Find your \texttt{.csv} file, the address of
which will be saved in \texttt{f}, and then:
    
<<eval=F>>=
mydata=read_csv(f)
@     

\item When you have selected the file, comment out the
  \texttt{file.choose} line by putting a \texttt{\#} on the front of
  it. That will save you having to find the file again by
  mistake. (Keyboard shortcut: go to the line, type control-shift-C or
  Mac equivalent with Cmd.)
  \end{itemize}
  
\end{frame}

\begin{frame}[fragile]{Looking at what we read in}
  
  \begin{itemize}
\item Again, type the name of the thing to display it:
  
<<size="small">>=
mydata
@   

\item This is a ``tibble'' or data frame, the standard way of storing
  a data set in R.
\item Tibbles print as much as will display on the screen. If there
  are more rows or columns, it will say so.
\item There are navigation keys to display more rows or columns.
  \end{itemize}
  
\end{frame}

\begin{frame}[fragile]{\texttt{View}-ing your data frame}
    
    \begin{itemize}
    \item Another way to examine your data frame is to View it, like this:
      
<<eval=F>>=
View(mydata)
@       
\ldots or find your data frame in the Global Environment top right and
click it.

\item This pops up a ``data frame viewer'' top left:
  
  \begin{center}
  \includegraphics[width=0.5\textwidth]{viewview}    
  \end{center}
    \end{itemize}
  
\end{frame}

\begin{frame}[fragile]{This View}
  
  \begin{itemize}
  \item Read-only: cannot edit data
  \item Can display data satisfying conditions: click on Filter, then:
    \begin{itemize}
    \item for a categorical variable, type name of category you want
    \item for a quantitative variable, use slider to describe values
      you want.
    \end{itemize}
  \item Can sort a column into ascending or descending order (click
    little arrows next to column name).
    
  \item Clicking the symbol with arrow on it left of Filter ``pops
    out'' View into separate (bigger) window.
  \end{itemize}
  
\end{frame}

\begin{frame}[fragile]{Summarizing what we read in}
  
  \begin{itemize}
  \item It is \emph{always} a good idea to look at your data after you
    have read it in, to make sure you have believable numbers (and the
    right number of individuals and variables). 
  \item Five-number summary:
    
<<size="footnotesize">>=
summary(mydata)
@     

\item For quantitative variables, a five-number summary plus the mean.
\item For categorical variables, count of how many rows.
\item Quick check for errors: these often show up as values too high
  or too low, so the min and/or max will be unreasonable.
  \end{itemize}
  
\end{frame}

  
\end{frame}

\begin{frame}[fragile]{Reading from a URL}
  
  \begin{itemize}
  \item Any data file on the Web can be read directly.
  \item Example data:
    \url{http://www.utsc.utoronto.ca/~butler/c32/global.csv}.
  \item Use URL instead of filename.
  \item I like to save the URL in a variable first (because URLs tend
    to be long), and then put that variable in the \texttt{read\_}
    function:

    
<<size="small">>=
my_url="http://www.utsc.utoronto.ca/~butler/c32/global.csv"
global=read_csv(my_url)
@     
  \end{itemize}
  
\end{frame}

\begin{frame}[fragile]{The data}
  
<<>>=
global
@   
  
\end{frame}

\begin{frame}[fragile]{Space-delimited files}
  
  \begin{itemize}
  \item Another common format for data is a text file with the values
    separated by spaces. Data below in two long columns with right
    side below left side:
    
    \begin{footnotesize}
    \begin{multicols}{2}
\verbatiminput{/home/ken/coffee.txt}      
    \end{multicols}
      
    \end{footnotesize}
    
  \end{itemize}
  
\end{frame}


\begin{frame}[fragile]{Reading the coffee data}
  
  \begin{itemize}
    \item This file was on my computer so I uploaded it to
      \texttt{rstudio.cloud} first.
    
\item This time, \texttt{read\_delim}, and we also have to say what
  the thing is separating the values:
  
<<>>=
coffee=read_delim("coffee.txt"," ")
@   

\item Name of the cup, text, and \texttt{tempdiff}, a decimal number.
  \end{itemize}
  
\end{frame}

\begin{frame}[fragile]{Looking at the values}
  
<<>>=
coffee
@   

These were four brands of travel mug (in \texttt{cup}), and for each,
how much the temperature of the coffee in the mug decreased over 30
minutes. 
  
\end{frame}

\begin{frame}[fragile]{Reading from the Web; the soap data}
  
  \begin{itemize}
  \item Use the URL in place of the filename.
  \item Save the URL in a variable first:
  \end{itemize}

<<>>=
url="http://www.utsc.utoronto.ca/~butler/c32/soap.txt"
soap=read_delim(url," ")
@   
  
\end{frame}

\begin{frame}[fragile]{The soap data}
  
<<>>=
soap
@   
  
\end{frame}


\begin{frame}[fragile]{Data aligned in columns}
  
  \begin{itemize}
  \item Sometimes you see data aligned in columns, thus:
    
    \begin{small}
      \verbatiminput{migraine.txt}
    \end{small}
      \item \texttt{read\_delim} \emph{will not} work: values
        separated by \emph{more than one} space.
      \item The number of spaces between values is not constant,
        because there is one fewer space before the 10.
      \item \texttt{read\_table} works for this.
  \end{itemize}
  
\end{frame}

\begin{frame}[fragile]{Reading in column-aligned data}
  
  \begin{multicols}{2}
<<size="small">>=
drugs=read_table("migraine.txt")
@   

<<>>=
drugs
@ 
    
  \end{multicols}

\end{frame}

\begin{frame}[fragile]{Reading an Excel sheet directly}
  
  \begin{itemize}
  \item Here is my spreadsheet from before, but tarted up a bit:
    
    \begin{center}
\includegraphics[width=0.35\textwidth]{excel}      
    \end{center}
\item It is now a workbook with a second sheet called ``notes'' (that
  we don't want).
\item Install package \texttt{readxl} first.
  \end{itemize}
  
\end{frame}

\begin{frame}[fragile]{Reading it in}
  
  \begin{itemize}
\item Read into R, saying that we only want the sheet ``data''. Upload
  spreadsheet first:
  
<<>>=
library(readxl)
mydata2=read_excel("test2.xlsx",sheet="data")
mydata2
@   
\item That has worked properly. (Excel spreadsheets must be ``local'':
  cannot read one in from a URL.)
  \end{itemize}
  
\end{frame}

